connect 4 
2 player or 1 player
rows = 6
columns = 7


if single player then the enemy picks a random number between 1 - 7

gameplay {

PLAYER 2's TURN <- stating who's turn it is 
 1 2 3 4 5 6 7 <- options
[0,0,0,0,0,0,0] <- board
[0,0,0,0,0,0,0] <- board
[0,0,0,0,0,0,0]
[0,0,0,0,0,0,0]
[0,1,0,0,0,0,0] <- player 1 has a identifier as 1
[1,2,0,0,0,0,0] <- player 2 has a identifier as 2

}

check win condition:
  check the row condition 
  check the column condition
  check diagonal condition


check input validation:
  need to loop on the current player until they give a valid input. 
  if the column is filled up make sure they can no longer go there.


need to work on:
  - computer valid input move.
  - win conditions 
  - with the minimax update, got a few bugs with the clear column power up

  OLD: 
  1    2    3    4    5    6    7
['0', '0', '0', '2', '0', '1', '0']
['0', '0', '0', '1', '0', '1', '0']
['0', '0', '%', '2', '0', '1', '0']
['1', '1', '1', '2', '0', '2', '0']
['2', '2', '2', '1', '0', '1', '%']
['1', '1', '1', '2', '1', '2', '2']
left diagonal winner

p1 win


new:

   1  2  3  4  5  6  7
   _  _  _  _  _  _  _ 
|  2  2  1  0  0  0  0  |
|  - - - - - - - - - -  |
|  1  2  2  0  1  0  0  |
|  - - - - - - - - - -  |
|  2  1  1  0  1  0  0  |
|  - - - - - - - - - -  |
|  2  2  2  0  2  0  0  |
|  - - - - - - - - - -  |
|  2  2  1  2  1  0  1  |
|  - - - - - - - - - -  |
|  1  2  2  1  1  1  2  |
|  - - - - - - - - - -  |
right diagonal winner

congratulations to player 2 for winning the game
latest move was column 4